{
  "step": "005",
  "nextStep": "006",
  "prevStep": "004",
  "sourceCode": {
    "step": "005",
    "fileTree": [
      {
        "nodeType": "DIRECTORY",
        "name": "protoc-go-experiments",
        "filePath": "protoc-go-experiments",
        "offset": 0,
        "isUpdated": false
      },
      {
        "nodeType": "DIRECTORY",
        "name": "helloworld",
        "filePath": "protoc-go-experiments/helloworld",
        "offset": 1,
        "isUpdated": false
      },
      {
        "nodeType": "FILE",
        "name": "helloworld.proto",
        "filePath": "protoc-go-experiments/helloworld/helloworld.proto",
        "offset": 2,
        "isUpdated": true
      }
    ],
    "defaultOpenFile": null,
    "fileContents": {
      "protoc-go-experiments/helloworld/helloworld.proto": {
        "fileName": "helloworld.proto",
        "filePath": "protoc-go-experiments/helloworld/helloworld.proto",
        "content": "syntax = \"proto3\";\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}",
        "isFullContent": true,
        "language": null,
        "highlight": null
      }
    }
  },
  "terminals": [
    {
      "name": "default",
      "currentDirectory": "protoc-go-experiments/helloworld",
      "nodes": [
        {
          "content": {
            "contentType": "TerminalCommand",
            "beforeExecution": false,
            "command": "mkdir protoc-go-experiments"
          }
        },
        {
          "content": {
            "contentType": "TerminalCommand",
            "beforeExecution": false,
            "command": "cd protoc-go-experiments"
          }
        },
        {
          "content": {
            "contentType": "TerminalCommand",
            "beforeExecution": false,
            "command": "mkdir helloworld"
          }
        },
        {
          "content": {
            "contentType": "TerminalCommand",
            "beforeExecution": false,
            "command": "cd helloworld # protoc-go-experiments/helloworld"
          }
        },
        {
          "content": {
            "contentType": "TerminalCommand",
            "beforeExecution": false,
            "command": "# protoc-go-experiments/helloworld/helloworld.proto\ncat \u003c\u003c EOF \u003e helloworld.proto\nsyntax = \"proto3\";\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\nEOF"
          }
        }
      ]
    }
  ],
  "nextAction": {
    "command": "# protoc-go-experiments/helloworld ディレクトリ内で以下を実行\nprotoc helloworld.proto # 引数で`.proto`ファイル名のみ指定"
  }
}
