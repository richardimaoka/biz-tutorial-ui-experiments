# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type TerminalCommand {
  beforeExecution: Boolean
  command: String
}

type TerminalCommandSet {
  commands: [TerminalCommand]
}

type TerminalOutput {
  output: String
}

union TerminalElement = TerminalCommand | TerminalCommandSet | TerminalOutput

type TerminalNode {
  content: TerminalElement
}

type Terminal {
  name: String
  currentDirectory: String
  nodes: [TerminalNode] # To make frontend pattern-matching easier, we return a list of concrete object types, instead of list of unions
}

type FileHighlight {
  fromLine: Int
  toLine: Int
}

type OpenFile {
  filePath: String
  fileName: String
  content: String
  isFullContent: Boolean
  language: String
  highlight: [FileHighlight]
}

enum FileNodeType {
  FILE
  DIRECTORY
}

type FileNode {
  nodeType: FileNodeType
  name: String
  filePath: String
  offset: Int
  isUpdated: Boolean
}

type SourceCode {
  fileTree: [FileNode]
  openFile(filePath: String!): OpenFile
}

type PageState {
  step: String
  nextStep: String
  prevStep: String
  sourceCode: SourceCode
  terminals: [Terminal]
}

type Query {
  pageState(step: String): PageState
  terminal(step: Int!): Terminal
}
