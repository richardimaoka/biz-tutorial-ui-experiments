// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type FileTreeNode interface {
	IsFileTreeNode()
}

type TerminalElement interface {
	IsTerminalElement()
}

type DirectoryNode struct {
	FilePath  []*string `json:"filePath"`
	IsUpdated *bool     `json:"isUpdated"`
}

func (DirectoryNode) IsFileTreeNode() {}

type FileHighlight struct {
	FromLine *int `json:"fromLine"`
	ToLine   *int `json:"toLine"`
}

type FileNode struct {
	FilePath  []*string `json:"filePath"`
	IsUpdated *bool     `json:"isUpdated"`
}

func (FileNode) IsFileTreeNode() {}

type OpenFile struct {
	FilePath      []*string        `json:"filePath"`
	Content       *string          `json:"content"`
	IsFullContent *bool            `json:"isFullContent"`
	Highlight     []*FileHighlight `json:"highlight"`
}

type SourceCode struct {
	FileTree []FileTreeNode `json:"fileTree"`
	OpenFile *OpenFile      `json:"openFile"`
}

type Step struct {
	StepNum    *int        `json:"stepNum"`
	SourceCode *SourceCode `json:"sourceCode"`
	Terminalis []*Terminal `json:"terminalis"`
	NextAction *string     `json:"nextAction"`
}

type Terminal struct {
	Name             *string         `json:"name"`
	CurrentDirectory []*string       `json:"currentDirectory"`
	Nodes            []*TerminalNode `json:"nodes"`
}

type TerminalCommand struct {
	Command *string `json:"command"`
}

func (TerminalCommand) IsTerminalElement() {}

type TerminalCommandSet struct {
	Commands []*TerminalCommand `json:"commands"`
}

func (TerminalCommandSet) IsTerminalElement() {}

type TerminalNode struct {
	Index   *int            `json:"index"`
	Content TerminalElement `json:"content"`
}

type TerminalOutput struct {
	Output *string `json:"output"`
}

func (TerminalOutput) IsTerminalElement() {}
