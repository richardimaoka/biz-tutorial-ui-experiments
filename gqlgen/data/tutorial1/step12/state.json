{
  "ide": {
    "fileTree": [
      {
        "__typename": "Directory",
        "offset": 0,
        "name": "protoc-go-experiments"
      },
      {
        "__typename": "Directory",
        "offset": 2,
        "name": "helloworld",
        "isCurrentDirectory": true
      },
      {
        "__typename": "File",
        "offset": 3,
        "name": "helloworld.proto"
      }
    ],
    "focusedFile": {
      "isFullContent": true,
      "content": "syntax = \"proto3\";\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n"
    }
  },
  "terminal": [
    {
      "__typename": "Command",
      "command": "mkdir protoc-go-experiments"
    },
    {
      "__typename": "Command",
      "command": "cd protoc-go-experiments"
    },
    {
      "__typename": "Command",
      "command": "mkdir helloworld"
    },
    {
      "__typename": "Command",
      "command": "cd helloworld"
    },
    {
      "__typename": "Command",
      "command": "# protoc-go-experiments/helloworld/helloworld.proto\ncat << EOF > helloworld.proto\nsyntax = \"proto3\";\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\nEOF"
    },
    {
      "__typename": "Command",
      "command": "# protoc-go-experiments/helloworld ディレクトリ内で以下を実行\nprotoc helloworld.proto # 引数で`.proto`ファイル名のみ指定"
    },
    {
      "__typename": "CommandOutput",
      "command": "Missing output directives."
    }
  ]
}
